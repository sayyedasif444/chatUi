{"version":3,"sources":["components/ConversationList.js","App.js","index.js"],"names":["data","require","Content","Layout","Sider","ConversationList","useState","conversation","setconversation","searchConvo","setsearchConvo","selectedConvo","setselectedConvo","useEffect","localStorage","getItem","JSON","parse","newSet","stringify","setItem","filter","ele","isActive","length","conversationChange","id","map","indexOf","searchContact","setsearchContact","open","setOpen","messageInput","setmessageInput","sendMessage","msg","index","history","push","incoming","message","date","moment","Date","format","console","log","width","style","background","height","className","placeholder","borderRadius","value","onChange","e","target","prefix","SearchOutlined","color","fontSize","fontWeight","letterSpacing","textTransform","content","contact","toLowerCase","includes","to","onClick","trigger","placement","onOpenChange","newOpen","preventDefault","float","marginTop","PlusCircleOutlined","overflow","display","flexWrap","cursor","src","alt","marginLeft","substr","padding","margin","minHeight","ind","size","onKeyPress","key","suffix","SendOutlined","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a7df728.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Input, Layout, Popover } from 'antd';\r\nimport {\r\n  SearchOutlined,\r\n  PlusCircleOutlined,\r\n  SendOutlined,\r\n} from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport moment from 'moment/moment';\r\nconst data = require('../data.json');\r\n\r\nconst { Content, Sider } = Layout;\r\n\r\nconst ConversationList = () => {\r\n  const [conversation, setconversation] = useState([]);\r\n  const [searchConvo, setsearchConvo] = useState('');\r\n  const [selectedConvo, setselectedConvo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('conversation') !== null) {\r\n      setconversation(JSON.parse(localStorage.getItem('conversation')));\r\n    } else {\r\n      var newSet = JSON.parse(JSON.stringify(data.conversation));\r\n      setconversation(newSet);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('conversation', JSON.stringify(conversation));\r\n    setselectedConvo(\r\n      conversation.filter((ele) => ele.isActive).length > 0\r\n        ? conversation.filter((ele) => ele.isActive)[0]\r\n        : null\r\n    );\r\n  }, [conversation]);\r\n\r\n  const conversationChange = (id) => {\r\n    var newSet = conversation.map((ele) => {\r\n      return { ...ele, isActive: false };\r\n    });\r\n    newSet[conversation.map((ele) => ele.id).indexOf(id)].isActive = true;\r\n    setconversation(newSet);\r\n  };\r\n\r\n  // popover code\r\n  const [searchContact, setsearchContact] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpenChange = (newOpen) => {\r\n    setOpen(newOpen);\r\n  };\r\n\r\n  //add message\r\n  const [messageInput, setmessageInput] = useState('');\r\n  const sendMessage = (msg, id) => {\r\n    var newSet = [...conversation];\r\n    var index = newSet.map((ele) => ele.id).indexOf(id);\r\n    if (index > -1) {\r\n      newSet[index].history.push({\r\n        incoming: false,\r\n        message: msg,\r\n        date: moment(new Date()).format('DD-MM-YYYY hh:mm A'),\r\n      });\r\n    }\r\n    console.log(newSet);\r\n    setconversation(newSet);\r\n    setselectedConvo(newSet[index]);\r\n    setmessageInput('')\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Layout>\r\n        <Sider\r\n          width={300}\r\n          style={{\r\n            background: '#fff',\r\n            height: '100vh',\r\n          }}\r\n        >\r\n          <div className='p-3'>\r\n            <Input\r\n              placeholder='Search for conversation'\r\n              style={{ borderRadius: '0px' }}\r\n              value={searchConvo}\r\n              onChange={(e) => setsearchConvo(e.target.value)}\r\n              prefix={<SearchOutlined style={{ color: 'rgba(0,0,0,0.4)' }} />}\r\n            />\r\n          </div>\r\n          <p\r\n            className='p-3 mb-1 border-bottom'\r\n            style={{\r\n              fontSize: '14px',\r\n              fontWeight: 'bold',\r\n              letterSpacing: '5px',\r\n              textTransform: 'uppercase',\r\n              color: 'rgba(0,0,0,0.4)',\r\n            }}\r\n          >\r\n            Converstation\r\n            <Popover\r\n              content={\r\n                <div className='popoverDiv'>\r\n                  <Input\r\n                    placeholder='Search for conversation'\r\n                    style={{ borderRadius: '0px' }}\r\n                    value={searchContact}\r\n                    onChange={(e) => setsearchContact(e.target.value)}\r\n                    prefix={\r\n                      <SearchOutlined style={{ color: 'rgba(0,0,0,0.4)' }} />\r\n                    }\r\n                  />\r\n                  <div className='searchResult'>\r\n                    {conversation\r\n                      .filter((ele) =>\r\n                        ele.contact\r\n                          .toLowerCase()\r\n                          .includes(searchContact.toLowerCase())\r\n                      )\r\n                      .map((ele, index) => (\r\n                        <Link\r\n                          to='#!'\r\n                          key={index}\r\n                          className='w-100'\r\n                          onClick={(e) => {\r\n                            conversationChange(ele.id);\r\n                            setOpen(false);\r\n                            setsearchContact('');\r\n                          }}\r\n                        >\r\n                          <div className='p-2 border-bottom'>{ele.contact}</div>\r\n                        </Link>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              }\r\n              trigger='click'\r\n              open={open}\r\n              placement='rightTop'\r\n              onOpenChange={handleOpenChange}\r\n            >\r\n              <Link\r\n                to='#!'\r\n                onClick={(e) => e.preventDefault()}\r\n                style={{ fontSize: '22px', float: 'right', marginTop: '-10px' }}\r\n              >\r\n                <PlusCircleOutlined />\r\n              </Link>\r\n            </Popover>\r\n          </p>\r\n          <div style={{ height: '80vh', overflow: 'auto' }}>\r\n            {conversation\r\n              .filter(\r\n                (ele) =>\r\n                  (ele.isActive || ele.history.length > 0) &&\r\n                  ele.contact.toLowerCase().includes(searchConvo.toLowerCase())\r\n              )\r\n              .map((ele, index) => (\r\n                <div\r\n                  className={\r\n                    'border-bottom  p-2 onHover ' + (ele.isActive && 'active')\r\n                  }\r\n                  style={{\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                  onClick={(e) => conversationChange(ele.id)}\r\n                  key={index}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: '40px',\r\n                      overflow: 'hidden',\r\n                      borderRadius: '20px',\r\n                      background: '#fff',\r\n                    }}\r\n                    className='border p-1'\r\n                  >\r\n                    <img src={'./user.jpg'} alt='' style={{ width: '100%' }} />\r\n                  </div>\r\n                  <div style={{ marginLeft: '10px' }}>\r\n                    <h6 className='mb-0 pb-0 '>{ele.contact}</h6>\r\n                    <p\r\n                      className={\r\n                        'mb-0 pb-0 ' +\r\n                        (ele.isActive ? 'text-white' : 'text-black-50')\r\n                      }\r\n                    >\r\n                      {ele.history.length > 0\r\n                        ? ele.history[ele.history.length - 1].message.substr(\r\n                            0,\r\n                            28\r\n                          )\r\n                        : ''}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </Sider>\r\n        {selectedConvo !== null && (\r\n          <Layout\r\n            style={{\r\n              padding: '0 0px 0px',\r\n            }}\r\n            className='border'\r\n          >\r\n            <div className='headerNav border'>\r\n              <div\r\n                style={{\r\n                  width: '40px',\r\n                  overflow: 'hidden',\r\n                  borderRadius: '20px',\r\n                  background: '#fff',\r\n                }}\r\n                className='border p-1'\r\n              >\r\n                <img src={'./user.jpg'} alt='' style={{ width: '100%' }} />\r\n              </div>\r\n              <h6 className='pl-4'>{selectedConvo.contact}</h6>\r\n            </div>\r\n            <Content\r\n              style={{\r\n                padding: 24,\r\n                margin: 0,\r\n                minHeight: 280,\r\n                background: 'rgba(0,0,0,0.0001)',\r\n              }}\r\n            >\r\n              {selectedConvo !== null &&\r\n                selectedConvo.history.map((ele, ind) =>\r\n                  ele.incoming ? (\r\n                    <div className='incoming' key={ind}>\r\n                      <div className='message'>{ele.message}</div>\r\n                      <small>{ele.date}</small>\r\n                    </div>\r\n                  ) : (\r\n                    <div className='outgoing' key={ind}>\r\n                      <div className='message'>{ele.message}</div>\r\n                      <small>{ele.date}</small>\r\n                    </div>\r\n                  )\r\n                )}\r\n            </Content>\r\n            <div className='chatInput'>\r\n              <Input\r\n                placeholder='Enter your message'\r\n                size='large'\r\n                value={messageInput}\r\n                onKeyPress={(e) => {\r\n                  if (e.key === 'Enter')\r\n                    sendMessage(messageInput, selectedConvo.id);\r\n                }}\r\n                onChange={(e) => setmessageInput(e.target.value)}\r\n                suffix={\r\n                  <SendOutlined\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      sendMessage(messageInput, selectedConvo.id);\r\n                    }}\r\n                  />\r\n                }\r\n                style={{ borderRadius: '0px' }}\r\n              />\r\n            </div>\r\n          </Layout>\r\n        )}\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ConversationList;\r\n","import './App.css';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport { Fragment } from 'react';\nimport './App.css';\nimport ConversationList from './components/ConversationList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router>\n        <Route exact path='/'>\n          <ConversationList />\n        </Route>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}